{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\notes\\\\client\\\\src\\\\components\\\\NotificationContainer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNotification } from '../contexts/NotificationContext';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContainer = () => {\n  _s();\n  const {\n    notifications,\n    removeNotification\n  } = useNotification();\n  if (notifications.length === 0) return null;\n  const getNotificationStyles = type => {\n    const baseStyles = \"mb-3 p-4 rounded-md border flex items-center justify-between animate-fade-in\";\n    switch (type) {\n      case 'success':\n        return `${baseStyles} bg-green-50 border-green-200 text-green-800`;\n      case 'error':\n        return `${baseStyles} bg-red-50 border-red-200 text-red-800`;\n      case 'warning':\n        return `${baseStyles} bg-yellow-50 border-yellow-200 text-yellow-800`;\n      default:\n        return `${baseStyles} bg-blue-50 border-blue-200 text-blue-800`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50 w-96 max-w-full\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getNotificationStyles(notification.type),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-1 text-sm font-medium\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeNotification(notification.id),\n        className: \"ml-3 p-1 hover:bg-gray-100 rounded-full transition-colors\",\n        children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationContainer, \"X1YYy01ZGS+VJ5sar5DC4or7FSU=\", false, function () {\n  return [useNotification];\n});\n_c = NotificationContainer;\nexport default NotificationContainer;\nvar _c;\n$RefreshReg$(_c, \"NotificationContainer\");","map":{"version":3,"names":["React","useNotification","XMarkIcon","jsxDEV","_jsxDEV","NotificationContainer","_s","notifications","removeNotification","length","getNotificationStyles","type","baseStyles","className","children","map","notification","message","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["D:/Projects/notes/client/src/components/NotificationContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\n\r\nconst NotificationContainer = () => {\r\n  const { notifications, removeNotification } = useNotification();\r\n\r\n  if (notifications.length === 0) return null;\r\n\r\n  const getNotificationStyles = (type) => {\r\n    const baseStyles = \"mb-3 p-4 rounded-md border flex items-center justify-between animate-fade-in\";\r\n    \r\n    switch (type) {\r\n      case 'success':\r\n        return `${baseStyles} bg-green-50 border-green-200 text-green-800`;\r\n      case 'error':\r\n        return `${baseStyles} bg-red-50 border-red-200 text-red-800`;\r\n      case 'warning':\r\n        return `${baseStyles} bg-yellow-50 border-yellow-200 text-yellow-800`;\r\n      default:\r\n        return `${baseStyles} bg-blue-50 border-blue-200 text-blue-800`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 w-96 max-w-full\">\r\n      {notifications.map((notification) => (\r\n        <div\r\n          key={notification.id}\r\n          className={getNotificationStyles(notification.type)}\r\n        >\r\n          <span className=\"flex-1 text-sm font-medium\">{notification.message}</span>\r\n          <button\r\n            onClick={() => removeNotification(notification.id)}\r\n            className=\"ml-3 p-1 hover:bg-gray-100 rounded-full transition-colors\"\r\n          >\r\n            <XMarkIcon className=\"h-4 w-4\" />\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC,aAAa;IAAEC;EAAmB,CAAC,GAAGP,eAAe,CAAC,CAAC;EAE/D,IAAIM,aAAa,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAE3C,MAAMC,qBAAqB,GAAIC,IAAI,IAAK;IACtC,MAAMC,UAAU,GAAG,8EAA8E;IAEjG,QAAQD,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,GAAGC,UAAU,8CAA8C;MACpE,KAAK,OAAO;QACV,OAAO,GAAGA,UAAU,wCAAwC;MAC9D,KAAK,SAAS;QACZ,OAAO,GAAGA,UAAU,iDAAiD;MACvE;QACE,OAAO,GAAGA,UAAU,2CAA2C;IACnE;EACF,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,0CAA0C;IAAAC,QAAA,EACtDP,aAAa,CAACQ,GAAG,CAAEC,YAAY,iBAC9BZ,OAAA;MAEES,SAAS,EAAEH,qBAAqB,CAACM,YAAY,CAACL,IAAI,CAAE;MAAAG,QAAA,gBAEpDV,OAAA;QAAMS,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAEE,YAAY,CAACC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1EjB,OAAA;QACEkB,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACQ,YAAY,CAACO,EAAE,CAAE;QACnDV,SAAS,EAAC,2DAA2D;QAAAC,QAAA,eAErEV,OAAA,CAACF,SAAS;UAACW,SAAS,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA,GATJL,YAAY,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAtCID,qBAAqB;EAAA,QACqBJ,eAAe;AAAA;AAAAuB,EAAA,GADzDnB,qBAAqB;AAwC3B,eAAeA,qBAAqB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
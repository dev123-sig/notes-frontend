{"ast":null,"code":"import _objectSpread from\"D:/Projects/notes/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext();const initialState={notifications:[]};const notificationReducer=(state,action)=>{switch(action.type){case'ADD_NOTIFICATION':return _objectSpread(_objectSpread({},state),{},{notifications:[...state.notifications,action.payload]});case'REMOVE_NOTIFICATION':return _objectSpread(_objectSpread({},state),{},{notifications:state.notifications.filter(n=>n.id!==action.payload)});case'CLEAR_NOTIFICATIONS':return _objectSpread(_objectSpread({},state),{},{notifications:[]});default:return state;}};export const NotificationProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(notificationReducer,initialState);const addNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;const id=Date.now()+Math.random();const notification={id,message,type};dispatch({type:'ADD_NOTIFICATION',payload:notification});if(duration>0){setTimeout(()=>{removeNotification(id);},duration);}return id;};const removeNotification=id=>{dispatch({type:'REMOVE_NOTIFICATION',payload:id});};const clearNotifications=()=>{dispatch({type:'CLEAR_NOTIFICATIONS'});};const showSuccess=(message,duration)=>addNotification(message,'success',duration);const showError=(message,duration)=>addNotification(message,'error',duration);const showInfo=(message,duration)=>addNotification(message,'info',duration);const showWarning=(message,duration)=>addNotification(message,'warning',duration);const value={notifications:state.notifications,addNotification,removeNotification,clearNotifications,showSuccess,showError,showInfo,showWarning};return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:value,children:children});};export const useNotification=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotification must be used within a NotificationProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","NotificationContext","initialState","notifications","notificationReducer","state","action","type","_objectSpread","payload","filter","n","id","NotificationProvider","_ref","children","dispatch","addNotification","message","arguments","length","undefined","duration","Date","now","Math","random","notification","setTimeout","removeNotification","clearNotifications","showSuccess","showError","showInfo","showWarning","value","Provider","useNotification","context","Error"],"sources":["D:/Projects/notes/client/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nconst initialState = {\r\n  notifications: []\r\n};\r\n\r\nconst notificationReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload]\r\n      };\r\n    case 'REMOVE_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(n => n.id !== action.payload)\r\n      };\r\n    case 'CLEAR_NOTIFICATIONS':\r\n      return {\r\n        ...state,\r\n        notifications: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\r\n\r\n  const addNotification = (message, type = 'info', duration = 5000) => {\r\n    const id = Date.now() + Math.random();\r\n    const notification = { id, message, type };\r\n    \r\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\r\n    \r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        removeNotification(id);\r\n      }, duration);\r\n    }\r\n    \r\n    return id;\r\n  };\r\n\r\n  const removeNotification = (id) => {\r\n    dispatch({ type: 'REMOVE_NOTIFICATION', payload: id });\r\n  };\r\n\r\n  const clearNotifications = () => {\r\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\r\n  };\r\n\r\n  const showSuccess = (message, duration) => addNotification(message, 'success', duration);\r\n  const showError = (message, duration) => addNotification(message, 'error', duration);\r\n  const showInfo = (message, duration) => addNotification(message, 'info', duration);\r\n  const showWarning = (message, duration) => addNotification(message, 'warning', duration);\r\n\r\n  const value = {\r\n    notifications: state.notifications,\r\n    addNotification,\r\n    removeNotification,\r\n    clearNotifications,\r\n    showSuccess,\r\n    showError,\r\n    showInfo,\r\n    showWarning\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={value}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\notes\\\\client\\\\src\\\\components\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { XMarkIcon, BoldIcon, ItalicIcon, UnderlineIcon, ListBulletIcon, FaceSmileIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteForm = ({\n  note,\n  onSubmit,\n  onCancel\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: (note === null || note === void 0 ? void 0 : note.title) || '',\n    content: (note === null || note === void 0 ? void 0 : note.content) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [activeFormats, setActiveFormats] = useState({\n    bold: false,\n    italic: false,\n    underline: false,\n    bulletList: false\n  });\n  const contentRef = useRef(null);\n\n  // Organized emojis by categories for better UX\n  const emojiCategories = {\n    'Smileys': ['😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰'],\n    'Emotions': ['😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜', '🤪', '🤨', '🧐', '🤓', '😎', '🤩', '🥳', '😏'],\n    'Reactions': ['😒', '😞', '😔', '😟', '😕', '🙁', '☹️', '😣', '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠'],\n    'Hands': ['👍', '👎', '👌', '✌️', '🤞', '🤟', '🤘', '🤙', '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '🖐'],\n    'Hearts': ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘'],\n    'Symbols': ['🔥', '⭐', '🌟', '✨', '⚡', '💯', '💢', '💥', '💫', '💦', '☮️', '💝', '💟', '🎉', '🎊', '🚀']\n  };\n\n  // Initialize content only once when note prop changes\n  useEffect(() => {\n    if (note !== null && note !== void 0 && note.content && contentRef.current && !contentRef.current.innerHTML) {\n      contentRef.current.innerHTML = convertMarkdownToHtml(note.content);\n    }\n  }, [note]);\n\n  // Selection change handler for tracking active formats\n  useEffect(() => {\n    const handleSelectionChange = () => {\n      updateActiveFormats();\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n    };\n  }, []);\n\n  // Debounce function\n  const debounce = (func, wait) => {\n    let timeout;\n    const debounced = (...args) => {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n    return debounced;\n  };\n\n  // Content update with debouncing to prevent cursor jumping\n  const debouncedUpdateContent = useRef(debounce(htmlContent => {\n    const markdownContent = convertHtmlToMarkdown(htmlContent);\n    setFormData(prev => ({\n      ...prev,\n      content: markdownContent\n    }));\n  }, 1000)).current;\n  const handleInput = () => {\n    const contentDiv = contentRef.current;\n    if (contentDiv) {\n      // Update active formats immediately for real-time feedback\n      updateActiveFormats();\n\n      // Debounce the content update to prevent cursor jumping\n      debouncedUpdateContent(contentDiv.innerHTML);\n    }\n  };\n  const handleKeyDown = e => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const selection = window.getSelection();\n      const range = selection.getRangeAt(0);\n      const currentElement = range.startContainer.nodeType === Node.TEXT_NODE ? range.startContainer.parentElement : range.startContainer;\n\n      // Check if we're in a list\n      const listItem = currentElement.closest('li');\n      const list = currentElement.closest('ul, ol');\n      if (listItem && list) {\n        // We're in a list item\n        const currentText = listItem.textContent.trim();\n        if (currentText === '') {\n          // Empty list item - exit the list\n          e.preventDefault();\n\n          // Create a new div after the list\n          const newDiv = document.createElement('div');\n          newDiv.innerHTML = '<br>';\n\n          // Insert after the list\n          list.parentNode.insertBefore(newDiv, list.nextSibling);\n\n          // Remove the empty list item\n          if (listItem.parentNode.children.length === 1) {\n            // Last item in list, remove the whole list\n            list.remove();\n          } else {\n            listItem.remove();\n          }\n\n          // Set cursor in the new div\n          const newRange = document.createRange();\n          newRange.setStart(newDiv, 0);\n          newRange.collapse(true);\n          selection.removeAllRanges();\n          selection.addRange(newRange);\n        } else {\n          // Create a new list item\n          const newListItem = document.createElement('li');\n          newListItem.innerHTML = '<br>';\n\n          // Insert after current list item\n          listItem.parentNode.insertBefore(newListItem, listItem.nextSibling);\n\n          // Set cursor in new list item\n          const newRange = document.createRange();\n          newRange.setStart(newListItem, 0);\n          newRange.collapse(true);\n          selection.removeAllRanges();\n          selection.addRange(newRange);\n        }\n      } else {\n        // Regular line break - create new div\n        const newDiv = document.createElement('div');\n        newDiv.innerHTML = '<br>';\n        range.deleteContents();\n        range.insertNode(newDiv);\n\n        // Move cursor to the new line\n        const newRange = document.createRange();\n        newRange.setStart(newDiv, 0);\n        newRange.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(newRange);\n      }\n\n      // Update content\n      setTimeout(() => {\n        updateContentFromDiv();\n        updateActiveFormats();\n      }, 10);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    } else if (formData.title.length > 200) {\n      newErrors.title = 'Title must be less than 200 characters';\n    }\n    if (!formData.content.trim()) {\n      newErrors.content = 'Content is required';\n    } else if (formData.content.length > 10000) {\n      newErrors.content = 'Content must be less than 10,000 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await onSubmit(formData);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n  const insertTextAtCursor = text => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    contentDiv.focus();\n    if (document.execCommand) {\n      document.execCommand('insertText', false, text);\n    } else {\n      // Fallback for browsers that don't support execCommand\n      const selection = window.getSelection();\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(document.createTextNode(text));\n        range.collapse(false);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n    updateContentFromDiv();\n  };\n  const wrapSelectedText = (command, value = null) => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    contentDiv.focus();\n    try {\n      // Use document.execCommand for real-time formatting\n      const success = document.execCommand(command, false, value);\n      if (success) {\n        updateActiveFormats();\n        updateContentFromDiv();\n      }\n    } catch (error) {\n      console.error('Error applying formatting:', error);\n    }\n  };\n  const updateContentFromDiv = () => {\n    const contentDiv = contentRef.current;\n    if (contentDiv) {\n      const htmlContent = contentDiv.innerHTML;\n      const markdownContent = convertHtmlToMarkdown(htmlContent);\n      setFormData(prev => ({\n        ...prev,\n        content: markdownContent\n      }));\n    }\n  };\n  const updateActiveFormats = () => {\n    try {\n      setActiveFormats({\n        bold: document.queryCommandState('bold'),\n        italic: document.queryCommandState('italic'),\n        underline: document.queryCommandState('underline'),\n        bulletList: document.queryCommandState('insertUnorderedList')\n      });\n    } catch (error) {\n      // Some browsers might not support queryCommandState\n      console.warn('Could not update active formats:', error);\n    }\n  };\n  const convertHtmlToMarkdown = html => {\n    if (!html) return '';\n    let markdown = html\n    // Convert bold\n    .replace(/<strong>(.*?)<\\/strong>/g, '**$1**').replace(/<b>(.*?)<\\/b>/g, '**$1**')\n    // Convert italic\n    .replace(/<em>(.*?)<\\/em>/g, '*$1*').replace(/<i>(.*?)<\\/i>/g, '*$1*')\n    // Convert underline (note: markdown doesn't have native underline)\n    .replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>')\n    // Convert bullet points\n    .replace(/<li>(.*?)<\\/li>/g, '• $1').replace(/<\\/?ul>/g, '')\n    // Convert div elements to line breaks (contentEditable creates divs for new lines)\n    .replace(/<div[^>]*>/g, '\\n').replace(/<\\/div>/g, '')\n    // Convert paragraph elements to line breaks\n    .replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '\\n')\n    // Convert line breaks\n    .replace(/<br\\s*\\/?>/g, '\\n')\n    // Remove any other HTML tags\n    .replace(/<[^>]*>/g, '')\n    // Clean up extra whitespace and normalize line breaks\n    .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n') // Convert triple+ newlines to double\n    .replace(/^\\s*\\n/, '') // Remove leading newlines\n    .replace(/\\n\\s*$/, '') // Remove trailing newlines\n    .trim();\n    return markdown;\n  };\n  const convertMarkdownToHtml = markdown => {\n    if (!markdown) return '';\n    let html = markdown\n    // Convert bold\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    // Convert italic\n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n    // Convert bullet points\n    .replace(/^• (.+)$/gm, '<li>$1</li>');\n\n    // Wrap consecutive list items in ul tags\n    html = html.replace(/(<li>.*?<\\/li>\\s*)+/gs, match => {\n      return '<ul>' + match + '</ul>';\n    });\n\n    // Split by lines and wrap each non-empty line in a div\n    const lines = html.split('\\n');\n    html = lines.map(line => {\n      line = line.trim();\n      if (!line) return '<div><br></div>'; // Empty line for spacing\n      if (line.startsWith('<ul>')) return line; // Don't wrap list containers\n      return `<div>${line}</div>`;\n    }).join('');\n    return html;\n  };\n  const handleFormatting = type => {\n    switch (type) {\n      case 'bold':\n        wrapSelectedText('bold');\n        break;\n      case 'italic':\n        wrapSelectedText('italic');\n        break;\n      case 'underline':\n        wrapSelectedText('underline');\n        break;\n      case 'bulletList':\n        insertBulletPoint();\n        break;\n      default:\n        break;\n    }\n  };\n  const insertBulletPoint = () => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    contentDiv.focus();\n\n    // Use document.execCommand for bullet lists - simpler and more reliable\n    try {\n      document.execCommand('insertUnorderedList', false, null);\n    } catch (error) {\n      // Fallback: insert bullet text manually\n      document.execCommand('insertText', false, '• ');\n    }\n    updateContentFromDiv();\n  };\n  const insertEmoji = emoji => {\n    insertTextAtCursor(emoji);\n    setShowEmojiPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative top-10 mx-auto p-5 border w-full max-w-4xl shadow-lg rounded-md bg-white m-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: note ? 'Edit Note' : 'Create New Note'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"p-1 text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: formData.title,\n            onChange: e => handleInputChange('title', e.target.value),\n            className: `input-field ${errors.title ? 'border-red-500' : ''}`,\n            placeholder: \"Enter note title...\",\n            maxLength: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-600\",\n            children: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-xs text-gray-500\",\n            children: [formData.title.length, \"/200 characters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 p-2 bg-gray-50 border border-gray-300 rounded-t-md border-b-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('bold'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.bold ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'}`,\n              title: \"Bold\",\n              children: /*#__PURE__*/_jsxDEV(BoldIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('italic'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.italic ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'}`,\n              title: \"Italic\",\n              children: /*#__PURE__*/_jsxDEV(ItalicIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('underline'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.underline ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'}`,\n              title: \"Underline\",\n              children: /*#__PURE__*/_jsxDEV(UnderlineIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('bulletList'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.bulletList ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'}`,\n              title: \"Bullet List\",\n              children: /*#__PURE__*/_jsxDEV(ListBulletIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowEmojiPicker(!showEmojiPicker),\n                className: \"p-2 rounded text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-all duration-200\",\n                title: \"Insert Emoji\",\n                children: /*#__PURE__*/_jsxDEV(FaceSmileIcon, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-full left-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-50 p-3 max-h-64 overflow-y-auto\",\n                style: {\n                  width: '300px'\n                },\n                children: Object.entries(emojiCategories).map(([category, emojis]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-xs font-semibold text-gray-600 mb-1\",\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap gap-1\",\n                    children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => insertEmoji(emoji),\n                      className: \"p-1 hover:bg-gray-100 rounded text-lg leading-none\",\n                      title: emoji,\n                      children: emoji\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 25\n                  }, this)]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: contentRef,\n            contentEditable: true,\n            onInput: handleInput,\n            onKeyDown: handleKeyDown,\n            className: `content-editor input-field min-h-[200px] rounded-t-none border-t-0 ${errors.content ? 'border-red-500' : ''}`,\n            style: {\n              whiteSpace: 'pre-wrap',\n              outline: 'none'\n            },\n            suppressContentEditableWarning: true,\n            \"data-placeholder\": \"Start writing your note content here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-600\",\n            children: errors.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"Supports \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"bold\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 26\n              }, this), \", \", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"italic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 49\n              }, this), \", \", /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"underline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 66\n              }, this), \", and bullet points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-xs ${formData.content.length > 9000 ? 'text-red-500' : formData.content.length > 7500 ? 'text-orange-500' : 'text-gray-500'}`,\n              children: [formData.content.length, \"/10,000 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onCancel,\n            className: \"btn-secondary\",\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-primary\",\n            disabled: loading || !formData.title.trim() || !formData.content.trim(),\n            children: loading ? 'Saving...' : note ? 'Update Note' : 'Create Note'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteForm, \"rxFcXs+MKtG0njS1kHoEupdc0t0=\");\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","XMarkIcon","BoldIcon","ItalicIcon","UnderlineIcon","ListBulletIcon","FaceSmileIcon","jsxDEV","_jsxDEV","NoteForm","note","onSubmit","onCancel","_s","formData","setFormData","title","content","loading","setLoading","errors","setErrors","showEmojiPicker","setShowEmojiPicker","activeFormats","setActiveFormats","bold","italic","underline","bulletList","contentRef","emojiCategories","current","innerHTML","convertMarkdownToHtml","handleSelectionChange","updateActiveFormats","document","addEventListener","removeEventListener","debounce","func","wait","timeout","debounced","args","later","clearTimeout","setTimeout","debouncedUpdateContent","htmlContent","markdownContent","convertHtmlToMarkdown","prev","handleInput","contentDiv","handleKeyDown","e","key","preventDefault","selection","window","getSelection","range","getRangeAt","currentElement","startContainer","nodeType","Node","TEXT_NODE","parentElement","listItem","closest","list","currentText","textContent","trim","newDiv","createElement","parentNode","insertBefore","nextSibling","children","length","remove","newRange","createRange","setStart","collapse","removeAllRanges","addRange","newListItem","deleteContents","insertNode","updateContentFromDiv","validateForm","newErrors","Object","keys","handleSubmit","error","console","handleInputChange","field","value","insertTextAtCursor","text","focus","execCommand","rangeCount","createTextNode","wrapSelectedText","command","success","queryCommandState","warn","html","markdown","replace","match","lines","split","map","line","startsWith","join","handleFormatting","type","insertBulletPoint","insertEmoji","emoji","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","target","placeholder","maxLength","style","width","entries","category","emojis","index","ref","contentEditable","onInput","onKeyDown","whiteSpace","outline","suppressContentEditableWarning","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/notes/client/src/components/NoteForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  XMarkIcon, \r\n  BoldIcon, \r\n  ItalicIcon, \r\n  UnderlineIcon,\r\n  ListBulletIcon,\r\n  FaceSmileIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst NoteForm = ({ note, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: note?.title || '',\r\n    content: note?.content || ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [activeFormats, setActiveFormats] = useState({\r\n    bold: false,\r\n    italic: false,\r\n    underline: false,\r\n    bulletList: false\r\n  });\r\n  const contentRef = useRef(null);\r\n\r\n  // Organized emojis by categories for better UX\r\n  const emojiCategories = {\r\n    'Smileys': [\r\n      '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', \r\n      '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰'\r\n    ],\r\n    'Emotions': [\r\n      '😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜',\r\n      '🤪', '🤨', '🧐', '🤓', '😎', '🤩', '🥳', '😏'\r\n    ],\r\n    'Reactions': [\r\n      '😒', '😞', '😔', '😟', '😕', '🙁', '☹️', '😣',\r\n      '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠'\r\n    ],\r\n    'Hands': [\r\n      '👍', '👎', '👌', '✌️', '🤞', '🤟', '🤘', '🤙',\r\n      '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '🖐'\r\n    ],\r\n    'Hearts': [\r\n      '❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍',\r\n      '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘'\r\n    ],\r\n    'Symbols': [\r\n      '🔥', '⭐', '🌟', '✨', '⚡', '💯', '💢', '💥',\r\n      '💫', '💦', '☮️', '💝', '💟', '🎉', '🎊', '🚀'\r\n    ]\r\n  };\r\n\r\n  // Initialize content only once when note prop changes\r\n  useEffect(() => {\r\n    if (note?.content && contentRef.current && !contentRef.current.innerHTML) {\r\n      contentRef.current.innerHTML = convertMarkdownToHtml(note.content);\r\n    }\r\n  }, [note]);\r\n\r\n  // Selection change handler for tracking active formats\r\n  useEffect(() => {\r\n    const handleSelectionChange = () => {\r\n      updateActiveFormats();\r\n    };\r\n\r\n    document.addEventListener('selectionchange', handleSelectionChange);\r\n    return () => {\r\n      document.removeEventListener('selectionchange', handleSelectionChange);\r\n    };\r\n  }, []);\r\n\r\n  // Debounce function\r\n  const debounce = (func, wait) => {\r\n    let timeout;\r\n    const debounced = (...args) => {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n    return debounced;\r\n  };\r\n\r\n  // Content update with debouncing to prevent cursor jumping\r\n  const debouncedUpdateContent = useRef(\r\n    debounce((htmlContent) => {\r\n      const markdownContent = convertHtmlToMarkdown(htmlContent);\r\n      setFormData(prev => ({ ...prev, content: markdownContent }));\r\n    }, 1000)\r\n  ).current;\r\n\r\n  const handleInput = () => {\r\n    const contentDiv = contentRef.current;\r\n    if (contentDiv) {\r\n      // Update active formats immediately for real-time feedback\r\n      updateActiveFormats();\r\n      \r\n      // Debounce the content update to prevent cursor jumping\r\n      debouncedUpdateContent(contentDiv.innerHTML);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      \r\n      const selection = window.getSelection();\r\n      const range = selection.getRangeAt(0);\r\n      const currentElement = range.startContainer.nodeType === Node.TEXT_NODE \r\n        ? range.startContainer.parentElement \r\n        : range.startContainer;\r\n\r\n      // Check if we're in a list\r\n      const listItem = currentElement.closest('li');\r\n      const list = currentElement.closest('ul, ol');\r\n\r\n      if (listItem && list) {\r\n        // We're in a list item\r\n        const currentText = listItem.textContent.trim();\r\n        \r\n        if (currentText === '') {\r\n          // Empty list item - exit the list\r\n          e.preventDefault();\r\n          \r\n          // Create a new div after the list\r\n          const newDiv = document.createElement('div');\r\n          newDiv.innerHTML = '<br>';\r\n          \r\n          // Insert after the list\r\n          list.parentNode.insertBefore(newDiv, list.nextSibling);\r\n          \r\n          // Remove the empty list item\r\n          if (listItem.parentNode.children.length === 1) {\r\n            // Last item in list, remove the whole list\r\n            list.remove();\r\n          } else {\r\n            listItem.remove();\r\n          }\r\n          \r\n          // Set cursor in the new div\r\n          const newRange = document.createRange();\r\n          newRange.setStart(newDiv, 0);\r\n          newRange.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(newRange);\r\n        } else {\r\n          // Create a new list item\r\n          const newListItem = document.createElement('li');\r\n          newListItem.innerHTML = '<br>';\r\n          \r\n          // Insert after current list item\r\n          listItem.parentNode.insertBefore(newListItem, listItem.nextSibling);\r\n          \r\n          // Set cursor in new list item\r\n          const newRange = document.createRange();\r\n          newRange.setStart(newListItem, 0);\r\n          newRange.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(newRange);\r\n        }\r\n      } else {\r\n        // Regular line break - create new div\r\n        const newDiv = document.createElement('div');\r\n        newDiv.innerHTML = '<br>';\r\n        \r\n        range.deleteContents();\r\n        range.insertNode(newDiv);\r\n        \r\n        // Move cursor to the new line\r\n        const newRange = document.createRange();\r\n        newRange.setStart(newDiv, 0);\r\n        newRange.collapse(true);\r\n        selection.removeAllRanges();\r\n        selection.addRange(newRange);\r\n      }\r\n      \r\n      // Update content\r\n      setTimeout(() => {\r\n        updateContentFromDiv();\r\n        updateActiveFormats();\r\n      }, 10);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    } else if (formData.title.length > 200) {\r\n      newErrors.title = 'Title must be less than 200 characters';\r\n    }\r\n    \r\n    if (!formData.content.trim()) {\r\n      newErrors.content = 'Content is required';\r\n    } else if (formData.content.length > 10000) {\r\n      newErrors.content = 'Content must be less than 10,000 characters';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      await onSubmit(formData);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n    \r\n    // Clear errors when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const insertTextAtCursor = (text) => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    contentDiv.focus();\r\n    \r\n    if (document.execCommand) {\r\n      document.execCommand('insertText', false, text);\r\n    } else {\r\n      // Fallback for browsers that don't support execCommand\r\n      const selection = window.getSelection();\r\n      if (selection.rangeCount > 0) {\r\n        const range = selection.getRangeAt(0);\r\n        range.deleteContents();\r\n        range.insertNode(document.createTextNode(text));\r\n        range.collapse(false);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n      }\r\n    }\r\n    \r\n    updateContentFromDiv();\r\n  };\r\n\r\n  const wrapSelectedText = (command, value = null) => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    contentDiv.focus();\r\n    \r\n    try {\r\n      // Use document.execCommand for real-time formatting\r\n      const success = document.execCommand(command, false, value);\r\n      if (success) {\r\n        updateActiveFormats();\r\n        updateContentFromDiv();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error applying formatting:', error);\r\n    }\r\n  };\r\n\r\n  const updateContentFromDiv = () => {\r\n    const contentDiv = contentRef.current;\r\n    if (contentDiv) {\r\n      const htmlContent = contentDiv.innerHTML;\r\n      const markdownContent = convertHtmlToMarkdown(htmlContent);\r\n      setFormData(prev => ({ ...prev, content: markdownContent }));\r\n    }\r\n  };\r\n\r\n  const updateActiveFormats = () => {\r\n    try {\r\n      setActiveFormats({\r\n        bold: document.queryCommandState('bold'),\r\n        italic: document.queryCommandState('italic'),\r\n        underline: document.queryCommandState('underline'),\r\n        bulletList: document.queryCommandState('insertUnorderedList')\r\n      });\r\n    } catch (error) {\r\n      // Some browsers might not support queryCommandState\r\n      console.warn('Could not update active formats:', error);\r\n    }\r\n  };\r\n\r\n  const convertHtmlToMarkdown = (html) => {\r\n    if (!html) return '';\r\n    \r\n    let markdown = html\r\n      // Convert bold\r\n      .replace(/<strong>(.*?)<\\/strong>/g, '**$1**')\r\n      .replace(/<b>(.*?)<\\/b>/g, '**$1**')\r\n      // Convert italic\r\n      .replace(/<em>(.*?)<\\/em>/g, '*$1*')\r\n      .replace(/<i>(.*?)<\\/i>/g, '*$1*')\r\n      // Convert underline (note: markdown doesn't have native underline)\r\n      .replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>')\r\n      // Convert bullet points\r\n      .replace(/<li>(.*?)<\\/li>/g, '• $1')\r\n      .replace(/<\\/?ul>/g, '')\r\n      // Convert div elements to line breaks (contentEditable creates divs for new lines)\r\n      .replace(/<div[^>]*>/g, '\\n')\r\n      .replace(/<\\/div>/g, '')\r\n      // Convert paragraph elements to line breaks\r\n      .replace(/<p[^>]*>/g, '')\r\n      .replace(/<\\/p>/g, '\\n')\r\n      // Convert line breaks\r\n      .replace(/<br\\s*\\/?>/g, '\\n')\r\n      // Remove any other HTML tags\r\n      .replace(/<[^>]*>/g, '')\r\n      // Clean up extra whitespace and normalize line breaks\r\n      .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n') // Convert triple+ newlines to double\r\n      .replace(/^\\s*\\n/, '') // Remove leading newlines\r\n      .replace(/\\n\\s*$/, '') // Remove trailing newlines\r\n      .trim();\r\n    \r\n    return markdown;\r\n  };\r\n\r\n  const convertMarkdownToHtml = (markdown) => {\r\n    if (!markdown) return '';\r\n    \r\n    let html = markdown\r\n      // Convert bold\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      // Convert italic\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      // Convert bullet points\r\n      .replace(/^• (.+)$/gm, '<li>$1</li>');\r\n    \r\n    // Wrap consecutive list items in ul tags\r\n    html = html.replace(/(<li>.*?<\\/li>\\s*)+/gs, (match) => {\r\n      return '<ul>' + match + '</ul>';\r\n    });\r\n    \r\n    // Split by lines and wrap each non-empty line in a div\r\n    const lines = html.split('\\n');\r\n    html = lines.map(line => {\r\n      line = line.trim();\r\n      if (!line) return '<div><br></div>'; // Empty line for spacing\r\n      if (line.startsWith('<ul>')) return line; // Don't wrap list containers\r\n      return `<div>${line}</div>`;\r\n    }).join('');\r\n    \r\n    return html;\r\n  };\r\n\r\n  const handleFormatting = (type) => {\r\n    switch (type) {\r\n      case 'bold':\r\n        wrapSelectedText('bold');\r\n        break;\r\n      case 'italic':\r\n        wrapSelectedText('italic');\r\n        break;\r\n      case 'underline':\r\n        wrapSelectedText('underline');\r\n        break;\r\n      case 'bulletList':\r\n        insertBulletPoint();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const insertBulletPoint = () => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    contentDiv.focus();\r\n    \r\n    // Use document.execCommand for bullet lists - simpler and more reliable\r\n    try {\r\n      document.execCommand('insertUnorderedList', false, null);\r\n    } catch (error) {\r\n      // Fallback: insert bullet text manually\r\n      document.execCommand('insertText', false, '• ');\r\n    }\r\n    \r\n    updateContentFromDiv();\r\n  };\r\n\r\n  const insertEmoji = (emoji) => {\r\n    insertTextAtCursor(emoji);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div className=\"relative top-10 mx-auto p-5 border w-full max-w-4xl shadow-lg rounded-md bg-white m-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">\r\n            {note ? 'Edit Note' : 'Create New Note'}\r\n          </h3>\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={`input-field ${errors.title ? 'border-red-500' : ''}`}\r\n              placeholder=\"Enter note title...\"\r\n              maxLength={200}\r\n            />\r\n            {errors.title && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.title}</p>\r\n            )}\r\n            <p className=\"mt-1 text-xs text-gray-500\">\r\n              {formData.title.length}/200 characters\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Content\r\n            </label>\r\n            \r\n            {/* Formatting Toolbar */}\r\n            <div className=\"flex items-center space-x-2 p-2 bg-gray-50 border border-gray-300 rounded-t-md border-b-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('bold')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.bold \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n                }`}\r\n                title=\"Bold\"\r\n              >\r\n                <BoldIcon className=\"h-4 w-4\" />\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('italic')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.italic \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n                }`}\r\n                title=\"Italic\"\r\n              >\r\n                <ItalicIcon className=\"h-4 w-4\" />\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('underline')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.underline \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n                }`}\r\n                title=\"Underline\"\r\n              >\r\n                <UnderlineIcon className=\"h-4 w-4\" />\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('bulletList')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.bulletList \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n                }`}\r\n                title=\"Bullet List\"\r\n              >\r\n                <ListBulletIcon className=\"h-4 w-4\" />\r\n              </button>\r\n\r\n              <div className=\"relative\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                  className=\"p-2 rounded text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-all duration-200\"\r\n                  title=\"Insert Emoji\"\r\n                >\r\n                  <FaceSmileIcon className=\"h-4 w-4\" />\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                  <div className=\"absolute top-full left-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-50 p-3 max-h-64 overflow-y-auto\" style={{ width: '300px' }}>\r\n                    {Object.entries(emojiCategories).map(([category, emojis]) => (\r\n                      <div key={category} className=\"mb-3\">\r\n                        <h4 className=\"text-xs font-semibold text-gray-600 mb-1\">{category}</h4>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {emojis.map((emoji, index) => (\r\n                            <button\r\n                              key={index}\r\n                              type=\"button\"\r\n                              onClick={() => insertEmoji(emoji)}\r\n                              className=\"p-1 hover:bg-gray-100 rounded text-lg leading-none\"\r\n                              title={emoji}\r\n                            >\r\n                              {emoji}\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              ref={contentRef}\r\n              contentEditable\r\n              onInput={handleInput}\r\n              onKeyDown={handleKeyDown}\r\n              className={`content-editor input-field min-h-[200px] rounded-t-none border-t-0 ${errors.content ? 'border-red-500' : ''}`}\r\n              style={{ \r\n                whiteSpace: 'pre-wrap',\r\n                outline: 'none'\r\n              }}\r\n              suppressContentEditableWarning={true}\r\n              data-placeholder=\"Start writing your note content here...\"\r\n            />\r\n            \r\n            {errors.content && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.content}</p>\r\n            )}\r\n            <div className=\"mt-1 flex justify-between items-center\">\r\n              <p className=\"text-xs text-gray-500\">\r\n                Supports <strong>bold</strong>, <em>italic</em>, <u>underline</u>, and bullet points\r\n              </p>\r\n              <p className={`text-xs ${\r\n                formData.content.length > 9000 ? 'text-red-500' : \r\n                formData.content.length > 7500 ? 'text-orange-500' : 'text-gray-500'\r\n              }`}>\r\n                {formData.content.length}/10,000 characters\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onCancel}\r\n              className=\"btn-secondary\"\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={loading || !formData.title.trim() || !formData.content.trim()}\r\n            >\r\n              {loading ? 'Saving...' : (note ? 'Update Note' : 'Create Note')}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
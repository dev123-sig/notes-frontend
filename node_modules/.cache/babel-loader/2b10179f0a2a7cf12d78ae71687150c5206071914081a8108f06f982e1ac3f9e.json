{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\notes\\\\client\\\\src\\\\components\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { XMarkIcon, BoldIcon, ItalicIcon, UnderlineIcon, ListBulletIcon, FaceSmileIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteForm = ({\n  note,\n  onSubmit,\n  onCancel\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: (note === null || note === void 0 ? void 0 : note.title) || '',\n    content: (note === null || note === void 0 ? void 0 : note.content) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [activeFormats, setActiveFormats] = useState({\n    bold: false,\n    italic: false,\n    underline: false,\n    bulletList: false\n  });\n  const contentRef = useRef(null);\n\n  // Organized emojis by categories for better UX\n  const emojiCategories = {\n    'Smileys': ['😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰'],\n    'Emotions': ['😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜', '🤪', '🤨', '🧐', '🤓', '😎', '🤩', '🥳', '😏'],\n    'Reactions': ['😒', '😞', '😔', '😟', '😕', '🙁', '☹️', '😣', '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠'],\n    'Hands': ['👍', '👎', '👌', '✌️', '🤞', '🤟', '🤘', '🤙', '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '�'],\n    'Hearts': ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘'],\n    'Symbols': ['🔥', '⭐', '🌟', '✨', '⚡', '💯', '💢', '💥', '💫', '💦', '☮️', '💝', '💟', '🎉', '🎊', '🚀']\n  };\n  useEffect(() => {\n    // Focus on content when component mounts and set initial content ONCE\n    if (contentRef.current) {\n      // Only set initial content when creating new note or editing existing note\n      // Don't update during typing to avoid cursor issues\n      if (note && note.content && contentRef.current.innerHTML === '') {\n        // Editing existing note - set initial content\n        const htmlContent = convertMarkdownToHtml(formData.content);\n        contentRef.current.innerHTML = htmlContent;\n      } else if (!note && contentRef.current.innerHTML === '') {\n        // New note - start empty but focus\n        contentRef.current.focus();\n      }\n\n      // Add selection change listeners to update active formats\n      const contentDiv = contentRef.current;\n      contentDiv.addEventListener('mouseup', handleSelectionChange);\n      contentDiv.addEventListener('keyup', handleSelectionChange);\n\n      // Cleanup listeners on unmount\n      return () => {\n        if (contentDiv) {\n          contentDiv.removeEventListener('mouseup', handleSelectionChange);\n          contentDiv.removeEventListener('keyup', handleSelectionChange);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [note]);\n\n  // Separate effect to handle content updates without cursor disruption\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (contentRef.current && formData.content === '') {\n      contentRef.current.innerHTML = '';\n    }\n  }, [formData.content]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    } else if (formData.title.length > 200) {\n      newErrors.title = 'Title must be less than 200 characters';\n    }\n    if (!formData.content.trim()) {\n      newErrors.content = 'Content is required';\n    } else if (formData.content.length > 10000) {\n      newErrors.content = 'Content must be less than 10,000 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await onSubmit({\n        title: formData.title.trim(),\n        content: formData.content.trim()\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: null\n      }));\n    }\n  };\n  const insertTextAtCursor = text => {\n    const div = contentRef.current;\n    if (!div) return;\n\n    // Insert text at current cursor position in contentEditable div\n    document.execCommand('insertText', false, text);\n\n    // Update the formData content\n    updateContentFromDiv();\n\n    // Keep focus on the div\n    div.focus();\n  };\n  const wrapSelectedText = (command, value = null) => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    contentDiv.focus();\n\n    // Use browser's built-in formatting commands for real-time formatting\n    try {\n      document.execCommand(command, false, value);\n    } catch (error) {\n      console.error('Formatting command failed:', error);\n    }\n\n    // Update the content state\n    updateContentFromDiv();\n\n    // Update active formats after applying formatting\n    setTimeout(() => {\n      updateActiveFormats();\n    }, 10);\n  };\n  const updateContentFromDiv = () => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n\n    // Get the HTML content and convert it to our format for storage\n    const htmlContent = contentDiv.innerHTML;\n    const textContent = convertHtmlToMarkdown(htmlContent);\n    handleInputChange('content', textContent);\n  };\n\n  // Function to check current formatting state at cursor position\n  const updateActiveFormats = () => {\n    if (!contentRef.current) return;\n    try {\n      const isBold = document.queryCommandState('bold');\n      const isItalic = document.queryCommandState('italic');\n      const isUnderline = document.queryCommandState('underline');\n      const isBulletList = document.queryCommandState('insertUnorderedList');\n      setActiveFormats({\n        bold: isBold,\n        italic: isItalic,\n        underline: isUnderline,\n        bulletList: isBulletList\n      });\n    } catch (error) {\n      // Silently handle any errors with queryCommandState\n      console.warn('Error checking format state:', error);\n    }\n  };\n\n  // Handle cursor/selection changes to update active formats\n  const handleSelectionChange = () => {\n    updateActiveFormats();\n  };\n  const convertHtmlToMarkdown = html => {\n    let text = html;\n\n    // Convert HTML tags back to markdown for storage\n    text = text.replace(/<strong>(.*?)<\\/strong>/g, '**$1**');\n    text = text.replace(/<b>(.*?)<\\/b>/g, '**$1**');\n    text = text.replace(/<em>(.*?)<\\/em>/g, '*$1*');\n    text = text.replace(/<i>(.*?)<\\/i>/g, '*$1*');\n    text = text.replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>');\n    text = text.replace(/<br\\s*\\/?>/g, '\\n');\n    text = text.replace(/<div>(.*?)<\\/div>/g, '\\n$1');\n    text = text.replace(/<p>(.*?)<\\/p>/g, '$1\\n');\n\n    // Handle list conversion - preserve proper list formatting\n    text = text.replace(/<li[^>]*>(.*?)<\\/li>/gs, '• $1\\n');\n    text = text.replace(/<ul[^>]*>(.*?)<\\/ul>/gs, '$1');\n    text = text.replace(/<ol[^>]*>(.*?)<\\/ol>/gs, '$1');\n\n    // Clean up extra line breaks and spaces\n    text = text.replace(/\\n\\s*\\n/g, '\\n\\n');\n    text = text.replace(/&nbsp;/g, ' ');\n    text = text.trim();\n    return text;\n  };\n  const convertMarkdownToHtml = markdown => {\n    let html = markdown;\n\n    // Convert markdown to HTML for display\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n    html = html.replace(/(?<!\\*)\\*([^*]+)\\*(?!\\*)/g, '<em>$1</em>');\n    html = html.replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>');\n\n    // Convert bullet points - handle both • and - as bullets\n    html = html.replace(/^[•-] (.*)$/gm, '<li>$1</li>');\n\n    // Wrap consecutive list items in <ul>\n    html = html.replace(/(<li>.*?<\\/li>\\s*)+/gs, match => {\n      return '<ul>' + match + '</ul>';\n    });\n\n    // Convert line breaks to <br> tags (but not inside lists)\n    html = html.replace(/\\n(?![^<]*<\\/li>)/g, '<br>');\n    return html;\n  };\n  const handleFormatting = type => {\n    switch (type) {\n      case 'bold':\n        wrapSelectedText('bold');\n        break;\n      case 'italic':\n        wrapSelectedText('italic');\n        break;\n      case 'underline':\n        wrapSelectedText('underline');\n        break;\n      case 'bulletList':\n        insertBulletPoint();\n        break;\n      default:\n        break;\n    }\n  };\n  const insertBulletPoint = () => {\n    const contentDiv = contentRef.current;\n    if (!contentDiv) return;\n    contentDiv.focus();\n\n    // Use document.execCommand for bullet lists - simpler and more reliable\n    try {\n      document.execCommand('insertUnorderedList', false, null);\n    } catch (error) {\n      // Fallback: insert bullet text manually\n      document.execCommand('insertText', false, '• ');\n    }\n    updateContentFromDiv();\n  };\n  const insertEmoji = emoji => {\n    insertTextAtCursor(emoji);\n    setShowEmojiPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative top-10 mx-auto p-5 border w-full max-w-4xl shadow-lg rounded-md bg-white m-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: note ? 'Edit Note' : 'Create New Note'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"p-1 text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: formData.title,\n            onChange: e => handleInputChange('title', e.target.value),\n            className: `input-field ${errors.title ? 'border-red-500' : ''}`,\n            placeholder: \"Enter note title...\",\n            maxLength: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-600\",\n            children: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-xs text-gray-500\",\n            children: [formData.title.length, \"/200 characters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 p-2 bg-gray-50 border border-gray-300 rounded-t-md border-b-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('bold'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.bold ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'}`,\n              title: \"Bold (wrap with **text**)\",\n              children: /*#__PURE__*/_jsxDEV(BoldIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('italic'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.italic ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'}`,\n              title: \"Italic (wrap with *text*)\",\n              children: /*#__PURE__*/_jsxDEV(ItalicIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('underline'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.underline ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'}`,\n              title: \"Underline (wrap with <u>text</u>)\",\n              children: /*#__PURE__*/_jsxDEV(UnderlineIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-px h-6 bg-gray-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFormatting('bulletList'),\n              className: `p-2 rounded transition-all duration-200 ${activeFormats.bulletList ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'}`,\n              title: \"Bullet Point\",\n              children: /*#__PURE__*/_jsxDEV(ListBulletIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-px h-6 bg-gray-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowEmojiPicker(!showEmojiPicker),\n                className: `p-2 rounded transition-all duration-200 ${showEmojiPicker ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'}`,\n                title: \"Insert Emoji\",\n                \"aria-label\": showEmojiPicker ? \"Close emoji picker\" : \"Open emoji picker\",\n                \"aria-expanded\": showEmojiPicker,\n                children: /*#__PURE__*/_jsxDEV(FaceSmileIcon, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-full left-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-xl p-4 z-10 w-96\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium text-gray-700 mb-3\",\n                    children: \"Select an Emoji\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"max-h-80 overflow-y-auto space-y-4\",\n                    children: Object.entries(emojiCategories).map(([category, emojis]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"text-xs font-medium text-gray-500 mb-2 uppercase tracking-wide\",\n                        children: category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 424,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-8 gap-2\",\n                        children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => insertEmoji(emoji),\n                          className: \"p-3 hover:bg-blue-50 rounded-lg text-xl transition-all duration-150 border border-transparent hover:border-blue-200 hover:shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transform hover:scale-110\",\n                          title: `Insert ${emoji}`,\n                          children: emoji\n                        }, `${category}-${index}`, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 29\n                      }, this)]\n                    }, category, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4 pt-3 border-t border-gray-200 flex justify-between items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-gray-400\",\n                      children: \"Click any emoji to insert\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => setShowEmojiPicker(false),\n                      className: \"text-xs text-gray-500 hover:text-gray-700 px-3 py-1 rounded-md hover:bg-gray-100 transition-colors\",\n                      children: \"Close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: \"Use the toolbar above for instant formatting, or type directly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: contentRef,\n            contentEditable: \"true\",\n            role: \"textbox\",\n            \"aria-label\": \"Note content\",\n            \"aria-multiline\": \"true\",\n            onBlur: updateContentFromDiv,\n            onKeyUp: updateContentFromDiv,\n            onMouseUp: handleSelectionChange,\n            className: `input-field content-editor resize-none rounded-t-none border-t-0 min-h-[300px] p-3 focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.content ? 'border-red-500' : ''}`,\n            style: {\n              fontFamily: 'system-ui, -apple-system, sans-serif',\n              whiteSpace: 'pre-wrap',\n              wordWrap: 'break-word',\n              outline: 'none'\n            },\n            suppressContentEditableWarning: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-600\",\n            children: errors.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: \"Tip: Use Ctrl+B for bold, Ctrl+I for italic, Ctrl+U for underline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-xs ${formData.content.length > 9000 ? 'text-red-500' : formData.content.length > 7500 ? 'text-orange-500' : 'text-gray-500'}`,\n              children: [formData.content.length, \"/10,000 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onCancel,\n            className: \"btn-secondary\",\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-primary\",\n            disabled: loading || !formData.title.trim() || !formData.content.trim(),\n            children: loading ? 'Saving...' : note ? 'Update Note' : 'Create Note'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteForm, \"CU8yDyUiMa3WvNuFwNIj95dHBR0=\");\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","XMarkIcon","BoldIcon","ItalicIcon","UnderlineIcon","ListBulletIcon","FaceSmileIcon","jsxDEV","_jsxDEV","NoteForm","note","onSubmit","onCancel","_s","formData","setFormData","title","content","loading","setLoading","errors","setErrors","showEmojiPicker","setShowEmojiPicker","activeFormats","setActiveFormats","bold","italic","underline","bulletList","contentRef","emojiCategories","current","innerHTML","htmlContent","convertMarkdownToHtml","focus","contentDiv","addEventListener","handleSelectionChange","removeEventListener","validateForm","newErrors","trim","length","Object","keys","handleSubmit","e","preventDefault","handleInputChange","field","value","prev","insertTextAtCursor","text","div","document","execCommand","updateContentFromDiv","wrapSelectedText","command","error","console","setTimeout","updateActiveFormats","textContent","convertHtmlToMarkdown","isBold","queryCommandState","isItalic","isUnderline","isBulletList","warn","html","replace","markdown","match","handleFormatting","type","insertBulletPoint","insertEmoji","emoji","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","target","placeholder","maxLength","entries","map","category","emojis","index","ref","contentEditable","role","onBlur","onKeyUp","onMouseUp","style","fontFamily","whiteSpace","wordWrap","outline","suppressContentEditableWarning","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/notes/client/src/components/NoteForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  XMarkIcon, \r\n  BoldIcon, \r\n  ItalicIcon, \r\n  UnderlineIcon,\r\n  ListBulletIcon,\r\n  FaceSmileIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst NoteForm = ({ note, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: note?.title || '',\r\n    content: note?.content || ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [activeFormats, setActiveFormats] = useState({\r\n    bold: false,\r\n    italic: false,\r\n    underline: false,\r\n    bulletList: false\r\n  });\r\n  const contentRef = useRef(null);\r\n\r\n  // Organized emojis by categories for better UX\r\n  const emojiCategories = {\r\n    'Smileys': [\r\n      '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', \r\n      '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰'\r\n    ],\r\n    'Emotions': [\r\n      '😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜',\r\n      '🤪', '🤨', '🧐', '🤓', '😎', '🤩', '🥳', '😏'\r\n    ],\r\n    'Reactions': [\r\n      '😒', '😞', '😔', '😟', '😕', '🙁', '☹️', '😣',\r\n      '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠'\r\n    ],\r\n    'Hands': [\r\n      '👍', '👎', '👌', '✌️', '🤞', '🤟', '🤘', '🤙',\r\n      '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '�'\r\n    ],\r\n    'Hearts': [\r\n      '❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍',\r\n      '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘'\r\n    ],\r\n    'Symbols': [\r\n      '🔥', '⭐', '🌟', '✨', '⚡', '💯', '💢', '💥',\r\n      '💫', '💦', '☮️', '💝', '💟', '🎉', '🎊', '🚀'\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Focus on content when component mounts and set initial content ONCE\r\n    if (contentRef.current) {\r\n      // Only set initial content when creating new note or editing existing note\r\n      // Don't update during typing to avoid cursor issues\r\n      if (note && note.content && contentRef.current.innerHTML === '') {\r\n        // Editing existing note - set initial content\r\n        const htmlContent = convertMarkdownToHtml(formData.content);\r\n        contentRef.current.innerHTML = htmlContent;\r\n      } else if (!note && contentRef.current.innerHTML === '') {\r\n        // New note - start empty but focus\r\n        contentRef.current.focus();\r\n      }\r\n      \r\n      // Add selection change listeners to update active formats\r\n      const contentDiv = contentRef.current;\r\n      contentDiv.addEventListener('mouseup', handleSelectionChange);\r\n      contentDiv.addEventListener('keyup', handleSelectionChange);\r\n      \r\n      // Cleanup listeners on unmount\r\n      return () => {\r\n        if (contentDiv) {\r\n          contentDiv.removeEventListener('mouseup', handleSelectionChange);\r\n          contentDiv.removeEventListener('keyup', handleSelectionChange);\r\n        }\r\n      };\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [note]);\r\n\r\n  // Separate effect to handle content updates without cursor disruption\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    if (contentRef.current && formData.content === '') {\r\n      contentRef.current.innerHTML = '';\r\n    }\r\n  }, [formData.content]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    } else if (formData.title.length > 200) {\r\n      newErrors.title = 'Title must be less than 200 characters';\r\n    }\r\n    \r\n    if (!formData.content.trim()) {\r\n      newErrors.content = 'Content is required';\r\n    } else if (formData.content.length > 10000) {\r\n      newErrors.content = 'Content must be less than 10,000 characters';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      await onSubmit({\r\n        title: formData.title.trim(),\r\n        content: formData.content.trim()\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: null }));\r\n    }\r\n  };\r\n\r\n  const insertTextAtCursor = (text) => {\r\n    const div = contentRef.current;\r\n    if (!div) return;\r\n\r\n    // Insert text at current cursor position in contentEditable div\r\n    document.execCommand('insertText', false, text);\r\n    \r\n    // Update the formData content\r\n    updateContentFromDiv();\r\n    \r\n    // Keep focus on the div\r\n    div.focus();\r\n  };\r\n\r\n  const wrapSelectedText = (command, value = null) => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    contentDiv.focus();\r\n    \r\n    // Use browser's built-in formatting commands for real-time formatting\r\n    try {\r\n      document.execCommand(command, false, value);\r\n    } catch (error) {\r\n      console.error('Formatting command failed:', error);\r\n    }\r\n    \r\n    // Update the content state\r\n    updateContentFromDiv();\r\n    \r\n    // Update active formats after applying formatting\r\n    setTimeout(() => {\r\n      updateActiveFormats();\r\n    }, 10);\r\n  };\r\n\r\n  const updateContentFromDiv = () => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n    \r\n    // Get the HTML content and convert it to our format for storage\r\n    const htmlContent = contentDiv.innerHTML;\r\n    const textContent = convertHtmlToMarkdown(htmlContent);\r\n    handleInputChange('content', textContent);\r\n  };\r\n\r\n  // Function to check current formatting state at cursor position\r\n  const updateActiveFormats = () => {\r\n    if (!contentRef.current) return;\r\n    \r\n    try {\r\n      const isBold = document.queryCommandState('bold');\r\n      const isItalic = document.queryCommandState('italic');\r\n      const isUnderline = document.queryCommandState('underline');\r\n      const isBulletList = document.queryCommandState('insertUnorderedList');\r\n      \r\n      setActiveFormats({\r\n        bold: isBold,\r\n        italic: isItalic,\r\n        underline: isUnderline,\r\n        bulletList: isBulletList\r\n      });\r\n    } catch (error) {\r\n      // Silently handle any errors with queryCommandState\r\n      console.warn('Error checking format state:', error);\r\n    }\r\n  };\r\n\r\n  // Handle cursor/selection changes to update active formats\r\n  const handleSelectionChange = () => {\r\n    updateActiveFormats();\r\n  };\r\n\r\n  const convertHtmlToMarkdown = (html) => {\r\n    let text = html;\r\n    \r\n    // Convert HTML tags back to markdown for storage\r\n    text = text.replace(/<strong>(.*?)<\\/strong>/g, '**$1**');\r\n    text = text.replace(/<b>(.*?)<\\/b>/g, '**$1**');\r\n    text = text.replace(/<em>(.*?)<\\/em>/g, '*$1*');\r\n    text = text.replace(/<i>(.*?)<\\/i>/g, '*$1*');\r\n    text = text.replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>');\r\n    text = text.replace(/<br\\s*\\/?>/g, '\\n');\r\n    text = text.replace(/<div>(.*?)<\\/div>/g, '\\n$1');\r\n    text = text.replace(/<p>(.*?)<\\/p>/g, '$1\\n');\r\n    \r\n    // Handle list conversion - preserve proper list formatting\r\n    text = text.replace(/<li[^>]*>(.*?)<\\/li>/gs, '• $1\\n');\r\n    text = text.replace(/<ul[^>]*>(.*?)<\\/ul>/gs, '$1');\r\n    text = text.replace(/<ol[^>]*>(.*?)<\\/ol>/gs, '$1');\r\n    \r\n    // Clean up extra line breaks and spaces\r\n    text = text.replace(/\\n\\s*\\n/g, '\\n\\n');\r\n    text = text.replace(/&nbsp;/g, ' ');\r\n    text = text.trim();\r\n    \r\n    return text;\r\n  };\r\n\r\n  const convertMarkdownToHtml = (markdown) => {\r\n    let html = markdown;\r\n    \r\n    // Convert markdown to HTML for display\r\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n    html = html.replace(/(?<!\\*)\\*([^*]+)\\*(?!\\*)/g, '<em>$1</em>');\r\n    html = html.replace(/<u>(.*?)<\\/u>/g, '<u>$1</u>');\r\n    \r\n    // Convert bullet points - handle both • and - as bullets\r\n    html = html.replace(/^[•-] (.*)$/gm, '<li>$1</li>');\r\n    \r\n    // Wrap consecutive list items in <ul>\r\n    html = html.replace(/(<li>.*?<\\/li>\\s*)+/gs, (match) => {\r\n      return '<ul>' + match + '</ul>';\r\n    });\r\n    \r\n    // Convert line breaks to <br> tags (but not inside lists)\r\n    html = html.replace(/\\n(?![^<]*<\\/li>)/g, '<br>');\r\n    \r\n    return html;\r\n  };\r\n\r\n  const handleFormatting = (type) => {\r\n    switch (type) {\r\n      case 'bold':\r\n        wrapSelectedText('bold');\r\n        break;\r\n      case 'italic':\r\n        wrapSelectedText('italic');\r\n        break;\r\n      case 'underline':\r\n        wrapSelectedText('underline');\r\n        break;\r\n      case 'bulletList':\r\n        insertBulletPoint();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const insertBulletPoint = () => {\r\n    const contentDiv = contentRef.current;\r\n    if (!contentDiv) return;\r\n\r\n    contentDiv.focus();\r\n    \r\n    // Use document.execCommand for bullet lists - simpler and more reliable\r\n    try {\r\n      document.execCommand('insertUnorderedList', false, null);\r\n    } catch (error) {\r\n      // Fallback: insert bullet text manually\r\n      document.execCommand('insertText', false, '• ');\r\n    }\r\n    \r\n    updateContentFromDiv();\r\n  };\r\n\r\n  const insertEmoji = (emoji) => {\r\n    insertTextAtCursor(emoji);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div className=\"relative top-10 mx-auto p-5 border w-full max-w-4xl shadow-lg rounded-md bg-white m-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">\r\n            {note ? 'Edit Note' : 'Create New Note'}\r\n          </h3>\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <XMarkIcon className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={`input-field ${errors.title ? 'border-red-500' : ''}`}\r\n              placeholder=\"Enter note title...\"\r\n              maxLength={200}\r\n            />\r\n            {errors.title && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.title}</p>\r\n            )}\r\n            <p className=\"mt-1 text-xs text-gray-500\">\r\n              {formData.title.length}/200 characters\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Content\r\n            </label>\r\n            \r\n            {/* Formatting Toolbar */}\r\n            <div className=\"flex items-center space-x-2 p-2 bg-gray-50 border border-gray-300 rounded-t-md border-b-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('bold')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.bold \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\r\n                }`}\r\n                title=\"Bold (wrap with **text**)\"\r\n              >\r\n                <BoldIcon className=\"h-4 w-4\" />\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('italic')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.italic \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\r\n                }`}\r\n                title=\"Italic (wrap with *text*)\"\r\n              >\r\n                <ItalicIcon className=\"h-4 w-4\" />\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('underline')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.underline \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\r\n                }`}\r\n                title=\"Underline (wrap with <u>text</u>)\"\r\n              >\r\n                <UnderlineIcon className=\"h-4 w-4\" />\r\n              </button>\r\n              \r\n              <div className=\"w-px h-6 bg-gray-300\"></div>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleFormatting('bulletList')}\r\n                className={`p-2 rounded transition-all duration-200 ${\r\n                  activeFormats.bulletList \r\n                    ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\r\n                }`}\r\n                title=\"Bullet Point\"\r\n              >\r\n                <ListBulletIcon className=\"h-4 w-4\" />\r\n              </button>\r\n              \r\n              <div className=\"w-px h-6 bg-gray-300\"></div>\r\n              \r\n              <div className=\"relative\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                  className={`p-2 rounded transition-all duration-200 ${\r\n                    showEmojiPicker \r\n                      ? 'text-blue-700 bg-blue-100 hover:bg-blue-200 ring-1 ring-blue-300' \r\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\r\n                  }`}\r\n                  title=\"Insert Emoji\"\r\n                  aria-label={showEmojiPicker ? \"Close emoji picker\" : \"Open emoji picker\"}\r\n                  aria-expanded={showEmojiPicker}\r\n                >\r\n                  <FaceSmileIcon className=\"h-4 w-4\" />\r\n                </button>\r\n                \r\n                {showEmojiPicker && (\r\n                  <div className=\"absolute top-full left-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-xl p-4 z-10 w-96\">\r\n                    <div className=\"mb-3\">\r\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Select an Emoji</h4>\r\n                      <div className=\"max-h-80 overflow-y-auto space-y-4\">\r\n                        {Object.entries(emojiCategories).map(([category, emojis]) => (\r\n                          <div key={category}>\r\n                            <h5 className=\"text-xs font-medium text-gray-500 mb-2 uppercase tracking-wide\">\r\n                              {category}\r\n                            </h5>\r\n                            <div className=\"grid grid-cols-8 gap-2\">\r\n                              {emojis.map((emoji, index) => (\r\n                                <button\r\n                                  key={`${category}-${index}`}\r\n                                  type=\"button\"\r\n                                  onClick={() => insertEmoji(emoji)}\r\n                                  className=\"p-3 hover:bg-blue-50 rounded-lg text-xl transition-all duration-150 border border-transparent hover:border-blue-200 hover:shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transform hover:scale-110\"\r\n                                  title={`Insert ${emoji}`}\r\n                                >\r\n                                  {emoji}\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"mt-4 pt-3 border-t border-gray-200 flex justify-between items-center\">\r\n                        <span className=\"text-xs text-gray-400\">Click any emoji to insert</span>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setShowEmojiPicker(false)}\r\n                          className=\"text-xs text-gray-500 hover:text-gray-700 px-3 py-1 rounded-md hover:bg-gray-100 transition-colors\"\r\n                        >\r\n                          Close\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex-1\"></div>\r\n              \r\n              <p className=\"text-xs text-gray-500\">\r\n                Use the toolbar above for instant formatting, or type directly\r\n              </p>\r\n            </div>\r\n            \r\n            <div\r\n              ref={contentRef}\r\n              contentEditable=\"true\"\r\n              role=\"textbox\"\r\n              aria-label=\"Note content\"\r\n              aria-multiline=\"true\"\r\n              onBlur={updateContentFromDiv}\r\n              onKeyUp={updateContentFromDiv}\r\n              onMouseUp={handleSelectionChange}\r\n              className={`input-field content-editor resize-none rounded-t-none border-t-0 min-h-[300px] p-3 focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.content ? 'border-red-500' : ''}`}\r\n              style={{ \r\n                fontFamily: 'system-ui, -apple-system, sans-serif',\r\n                whiteSpace: 'pre-wrap',\r\n                wordWrap: 'break-word',\r\n                outline: 'none'\r\n              }}\r\n              suppressContentEditableWarning={true}\r\n            />\r\n            {errors.content && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.content}</p>\r\n            )}\r\n            <div className=\"mt-1 flex justify-between items-center\">\r\n              <p className=\"text-xs text-gray-500\">\r\n                Tip: Use Ctrl+B for bold, Ctrl+I for italic, Ctrl+U for underline\r\n              </p>\r\n              <p className={`text-xs ${\r\n                formData.content.length > 9000 ? 'text-red-500' : \r\n                formData.content.length > 7500 ? 'text-orange-500' : 'text-gray-500'\r\n              }`}>\r\n                {formData.content.length}/10,000 characters\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onCancel}\r\n              className=\"btn-secondary\"\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={loading || !formData.title.trim() || !formData.content.trim()}\r\n            >\r\n              {loading ? 'Saving...' : (note ? 'Update Note' : 'Create Note')}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}